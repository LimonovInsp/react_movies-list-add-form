{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Inputs/TitleInput/TitleInput.js","components/Inputs/DescriptionInput/DescriptionInput.js","components/Inputs/ImageInput/ImageInput.js","components/Inputs/ImdbUrlInput/ImdbUrlInput.js","components/Inputs/ImdbIdInput/ImdbIdInput.js","components/MovieButton/MovieButton.js","components/Shapes/InputsInformationShape.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","TitleInput","onChangeInput","handleValidate","error","maxLength","type","placeholder","value","id","onChange","event","target","onBlur","DescriptionInput","props","ImageInput","ImdbUrlInput","ImdbIdInput","MovieButton","PropTypes","shape","string","isRequired","errors","inputsAmount","Array","from","Object","values","some","disabled","NewMovie","state","field","setState","trim","test","prevState","length","handleSubmit","preventDefault","handleAddMovies","this","onSubmit","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a15f350.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TitleInput = ({ onChangeInput, title, handleValidate, error }) => (\n  <>\n    <input\n      maxLength=\"40\"\n      type=\"text\"\n      placeholder=\"Title\"\n      value={title}\n      className={error ? `App__input App__input-error` : `App__input`}\n      id=\"title\"\n      onChange={event => onChangeInput(event.target.value, 'title')}\n      onBlur={event => handleValidate(event.target.value, 'title')}\n    />\n    {error && <div className=\"error__container\"> Please enter the title </div>}\n  </>\n);\n\nTitleInput.propTypes = {\n  onChangeInput: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  handleValidate: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const DescriptionInput = (props) => {\n  const { onChangeInput, description, handleValidate, error } = props;\n\n  return (\n    <>\n      <input\n        maxLength=\"250\"\n        type=\"text\"\n        placeholder=\"Description\"\n        className={error ? `App__input App__input-error` : `App__input`}\n        value={description}\n        onChange={event => onChangeInput(event.target.value, 'description')}\n        onBlur={event => handleValidate(event.target.value, 'description')}\n      />\n      {error\n       && <div className=\"error__container\">Please enter the description</div>}\n    </>\n  );\n};\n\nDescriptionInput.propTypes = {\n  onChangeInput: PropTypes.func.isRequired,\n  description: PropTypes.string.isRequired,\n  handleValidate: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ImageInput = (props) => {\n  const { onChangeInput, imgUrl, handleValidate, error } = props;\n\n  return (\n    <>\n      <input\n        maxLength=\"100\"\n        type=\"text\"\n        placeholder=\"Image URL\"\n        className={error ? `App__input App__input-error` : `App__input`}\n        value={imgUrl}\n        onChange={event => onChangeInput(event.target.value, 'imgUrl')}\n        onBlur={event => handleValidate(event.target.value, 'imgUrl')}\n      />\n      {error\n      && <div className=\"error__container\">Please enter the correct URL</div>}\n    </>\n  );\n};\n\nImageInput.propTypes = {\n  onChangeInput: PropTypes.func.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  handleValidate: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ImdbUrlInput = (props) => {\n  const { onChangeInput, imdbUrl, handleValidate, error } = props;\n\n  return (\n    <>\n      <input\n        maxLength=\"100\"\n        type=\"text\"\n        placeholder=\"Imdb URL\"\n        className={error ? `App__input App__input-error` : `App__input`}\n        value={imdbUrl}\n        onChange={event => onChangeInput(event.target.value, 'imdbUrl')}\n        onBlur={event => handleValidate(event.target.value, 'imdbUrl')}\n      />\n      {error\n      && <div className=\"error__container\">Please enter the correct URL</div>}\n    </>\n  );\n};\n\nImdbUrlInput.propTypes = {\n  onChangeInput: PropTypes.func.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n  handleValidate: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ImdbIdInput = (props) => {\n  const { onChangeInput, imdbId, handleValidate, error } = props;\n\n  return (\n    <>\n      <input\n        maxLength=\"20\"\n        type=\"text\"\n        value={imdbId}\n        placeholder=\"Imdb ID\"\n        className={error ? `App__input App__input-error` : `App__input`}\n        onChange={event => onChangeInput(event.target.value, 'imdbId')}\n        onBlur={event => handleValidate(event.target.value, 'imdbId')}\n      />\n      {error && <div className=\"error__container\">Please enter the ID</div>}\n    </>\n  );\n};\n\nImdbIdInput.propTypes = {\n  onChangeInput: PropTypes.func.isRequired,\n  imdbId: PropTypes.string.isRequired,\n  handleValidate: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport { InputsInformationShape } from '../Shapes/InputsInformationShape';\n\nexport const MovieButton = ({ errors }) => {\n  const inputsAmount = Array\n    .from(Object.values(errors))\n    .some(error => error === true);\n\n  return (\n    <button\n      type=\"submit\"\n      className=\"App__button\"\n      disabled={inputsAmount}\n    >\n      Add a movie\n    </button>\n  );\n};\n\nMovieButton.propTypes = InputsInformationShape.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const InputsInformationShape = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n  imdbId: PropTypes.string.isRequired,\n});\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\nimport { TitleInput } from '../Inputs/TitleInput/TitleInput';\nimport { DescriptionInput } from '../Inputs/DescriptionInput/DescriptionInput';\nimport { ImageInput } from '../Inputs/ImageInput/ImageInput';\nimport { ImdbUrlInput } from '../Inputs/ImdbUrlInput/ImdbUrlInput';\nimport { ImdbIdInput } from '../Inputs/ImdbIdInput/ImdbIdInput';\nimport { MovieButton } from '../MovieButton/MovieButton';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {\n      title: true,\n      description: true,\n      imgUrl: true,\n      imdbUrl: true,\n      imdbId: true,\n    },\n  };\n\n  onChangeInput = (event, field) => {\n    this.setState({\n      [field]: event.trim(),\n    });\n  }\n\n  handleValidate = (event, field) => {\n    if (field === 'imgUrl' || field === 'imdbUrl') {\n      // eslint-disable-next-line max-len\n      const regex = (/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n      if (!regex.test(event)) {\n        this.setState(prevState => ({\n          errors: {\n            ...prevState.errors,\n            [field]: true,\n          },\n        }));\n      } else {\n        this.setState(prevState => ({\n          errors: {\n            ...prevState.errors,\n            [field]: false,\n          },\n        }));\n      }\n    } else if (event.length === 0) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          [field]: true,\n        },\n      }));\n    } else {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          [field]: false,\n        },\n      }));\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.handleAddMovies(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      errors: {\n        title: true,\n        description: true,\n        imgUrl: true,\n        imdbUrl: true,\n        imdbId: true,\n      },\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errors,\n    } = this.state;\n\n    return (\n      <form className=\"App__form\" onSubmit={this.handleSubmit}>\n        <h1>Add a movie</h1>\n        <TitleInput\n          onChangeInput={this.onChangeInput}\n          handleValidate={this.handleValidate}\n          title={title}\n          error={errors.title}\n        />\n        <DescriptionInput\n          onChangeInput={this.onChangeInput}\n          handleValidate={this.handleValidate}\n          description={description}\n          error={errors.description}\n        />\n        <ImageInput\n          onChangeInput={this.onChangeInput}\n          handleValidate={this.handleValidate}\n          imgUrl={imgUrl}\n          error={errors.imgUrl}\n        />\n        <ImdbUrlInput\n          onChangeInput={this.onChangeInput}\n          handleValidate={this.handleValidate}\n          imdbUrl={imdbUrl}\n          error={errors.imdbUrl}\n        />\n        <ImdbIdInput\n          onChangeInput={this.onChangeInput}\n          handleValidate={this.handleValidate}\n          imdbId={imdbId}\n          error={errors.imdbId}\n        />\n        <MovieButton errors={errors} />\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = { handleAddMovies: PropTypes.func.isRequired };\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  handleAddMovies = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie handleAddMovies={this.handleAddMovies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}